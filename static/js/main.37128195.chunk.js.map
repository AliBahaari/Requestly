{"version":3,"sources":["components/Error.js","components/LogInForm.js","actions/adminAction.js","components/Dashboard.js","App.js","reportWebVitals.js","reducers/adminReducer.js","reducers/index.js","index.js"],"names":["Error","props","className","text","onClick","closeError","LogInForm","dispatch","useDispatch","useState","admin","setAdmin","error","setError","onSubmit","e","preventDefault","length","type","payload","onChange","target","value","options","label","Dashboard","adminReducer","useSelector","state","selectedOption","setSelectedOption","url","setUrl","errorText","setErrorText","data","setData","response","setResponse","test","includes","fetch","method","then","json","err","console","log","defaultValue","JSON","stringify","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","action","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37128195.chunk.js","sourcesContent":["import '../styles/Error.css';\r\n\r\nfunction Error(props) {\r\n    return (\r\n        <div className=\"error\">\r\n            <p>{ props.text }</p>\r\n            <p className=\"timesSign\" onClick={props.closeError}>Ã—</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { adminAction } from '../actions/adminAction';\r\nimport '../styles/LogInForm.css';\r\nimport Error from './Error';\r\n\r\nfunction LogInForm() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [admin, setAdmin] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    const formSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (admin.length > 2) {\r\n            dispatch(adminAction(admin));\r\n        } else {\r\n            setError(true);\r\n        }\r\n\r\n    }\r\n\r\n    const closeError = () => {\r\n\r\n        setError(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"logInForm\">\r\n            <h2>Enter your name:</h2>\r\n            <form onSubmit={formSubmit}>\r\n                <input type=\"text\" onChange={(e) => setAdmin(e.target.value)} />\r\n                <button>Log In</button>\r\n            </form>\r\n\r\n            {\r\n                error ?\r\n                <Error text=\"Enter your name.\" closeError={closeError} /> :\r\n                ''\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogInForm;","export const adminAction = (adminName) => {\r\n    return {\r\n        type: 'LOGGED',\r\n        payload: adminName\r\n    }\r\n}","import { useSelector } from 'react-redux';\r\nimport '../styles/Dashboard.css';\r\nimport Select from 'react-select';\r\nimport { useState } from 'react';\r\nimport Error from './Error';\r\n\r\nconst options = [\r\n    { value: 'post', label: 'POST' },\r\n    { value: 'get', label: 'GET' },\r\n];\r\n\r\nfunction Dashboard() {\r\n\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [url, setUrl] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [errorText, setErrorText] = useState('');\r\n    const [data, setData] = useState(null);\r\n    const [response, setResponse] = useState(false);\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (selectedOption !== null) {\r\n            setError(false);\r\n            if (url.length > 0) {\r\n                setError(false);\r\n                if (/[a-z0-9-]+(\\.\\w+)+/g.test(url)) {\r\n                    setError(false);\r\n                    \r\n                    if (!url.includes('http://') || !url.includes('https://')) {\r\n                        \r\n                        try {\r\n\r\n                            fetch(url, {\r\n                                method: selectedOption.value\r\n                            })\r\n                            .then(response => response.json())\r\n                            .then(data => {\r\n                                \r\n                                setResponse(true);\r\n                                setData(data);\r\n                                \r\n                            });\r\n\r\n                            setResponse(true);\r\n\r\n                        } catch (err) {\r\n                            console.log(err);\r\n                        }\r\n                    \r\n                    }\r\n\r\n                } else {\r\n                    setErrorText('The URL isn\\'t compatible.');\r\n                    setError(true);\r\n                }\r\n            } else {\r\n                setErrorText('The URL must be filled.');\r\n                setError(true);            \r\n            }\r\n        } else {\r\n            setErrorText('Select the protocole.');\r\n            setError(true);\r\n        }\r\n\r\n    }\r\n\r\n    const closeError = () => {\r\n\r\n        setError(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n\r\n            <h1>Welcome {adminReducer.admin} to Requestly!</h1>\r\n\r\n            <form onSubmit={submitForm}>\r\n                <div>\r\n                    <Select\r\n                        defaultValue={selectedOption}\r\n                        onChange={setSelectedOption}\r\n                        options={options}\r\n                        className=\"selectComponent\"\r\n                    />\r\n                </div>\r\n\r\n                <input type=\"text\" onChange={(e) => setUrl(e.target.value)} />\r\n                \r\n                <button>\r\n                    Request\r\n                </button>\r\n            </form>\r\n\r\n            {\r\n                error ?\r\n                <Error text={errorText} closeError={closeError} /> :\r\n                ''\r\n            }\r\n\r\n            {\r\n                response ?\r\n                <div className=\"dashboardResponse\">\r\n                    <h2>Response</h2>\r\n                    <code>\r\n\r\n                        {\r\n                            data ?\r\n                            JSON.stringify(data, null, 2) :\r\n                            ''\r\n                        }\r\n\r\n                    </code>\r\n                </div> :\r\n                ''\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import LogInForm from './components/LogInForm';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n\n  const adminReducer = useSelector(state => state.adminReducer);\n\n  return (\n    <div className=\"app\">\n      \n      {\n        adminReducer.admin !== '' ? \n        <Dashboard /> :\n        <LogInForm />\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\r\n    admin: ''\r\n}\r\n\r\nconst adminReducer = (state = initState, action) => {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'LOGGED':\r\n            return {...state, admin: action.payload}\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default adminReducer;","import { combineReducers } from 'redux';\r\nimport adminReducer from './adminReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    adminReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}