{"version":3,"sources":["components/Error.js","components/Protocole.js","components/Response.js","components/Dashboard.js","App.js","reportWebVitals.js","reducers/index.js","index.js"],"names":["Error","props","className","text","onClick","closeError","Protocole","useState","inputElements","setInputElements","map","el","i","component","type","placeholder","onChange","method","addedElements","Response","children","options","value","label","Dashboard","selectedOption","setSelectedOption","url","setUrl","error","setError","errorText","setErrorText","data","setData","response","setResponse","firstInputs","setFirstInputs","secondInputs","setSecondInputs","formData","setFormData","firstInputsMethod","e","target","secondInputsMethod","onSubmit","preventDefault","length","test","includes","fetch","body","then","json","newUrl","URL","key","searchParams","append","err","console","log","defaultValue","JSON","stringify","title","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75e24812.chunk.js","sourcesContent":["import '../styles/Error.css';\r\n\r\nfunction Error(props) {\r\n    return (\r\n        <div className=\"error\">\r\n            <p>{ props.text }</p>\r\n            <p className=\"timesSign\" onClick={props.closeError}>Ã—</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import '../styles/Protocole.css';\r\nimport { useState } from 'react';\r\n\r\nfunction Protocole(props) {\r\n\r\n\tconst [inputElements, setInputElements] = useState([]);\r\n\r\n    const addFields = () => {\r\n\r\n        const component =\r\n\t\t\t<>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Parameter\" className=\"optionsInput\" onChange={props.method[0]} />\r\n\t\t\t\t<input type=\"text\" placeholder=\"Value\" className=\"optionsInput\" onChange={props.method[1]} />\r\n\t\t\t</>;\r\n        const addedElements = [...inputElements, component];\r\n        setInputElements(addedElements);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={props.className}>\r\n\r\n\t\t\t{\r\n\r\n\t\t\t\tinputElements.map((el, i) => (\r\n\t\t\t\t\t<div key={i} className=\"inputElements\">\r\n\t\t\t\t\t\t{el}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))\r\n\r\n\t\t\t}\r\n\r\n            <span className=\"addButton\" onClick={addFields}>Add a Field</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Protocole;","import '../styles/Response.css';\r\n\r\nfunction Response(props) {\r\n    return (\r\n        <div className=\"response\">\r\n            <code>\r\n\r\n                {props.children}\r\n\r\n            </code>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Response;","import '../styles/Dashboard.css';\r\nimport Select from 'react-select';\r\nimport { useState } from 'react';\r\nimport Error from './Error';\r\nimport Protocole from './Protocole';\r\nimport Response from './Response';\r\n\r\nconst options = [\r\n    { value: 'post', label: 'POST' },\r\n    { value: 'get', label: 'GET' },\r\n];\r\n\r\nfunction Dashboard() {\r\n\r\n    const [selectedOption, setSelectedOption] = useState(null);\r\n    const [url, setUrl] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [errorText, setErrorText] = useState('');\r\n    const [data, setData] = useState(null);\r\n    const [response, setResponse] = useState(false);\r\n    const [firstInputs, setFirstInputs] = useState([]);\r\n\tconst [secondInputs, setSecondInputs] = useState([]);\r\n    const [formData, setFormData] = useState({});\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        setResponse(false);\r\n        setData(null);\r\n\r\n        for (let i = 0; i < firstInputs.length; i++) {\r\n\r\n            setFormData({...formData,\r\n                [firstInputs[i]]: secondInputs[i]\r\n            });\r\n\r\n        }\r\n\r\n        if (selectedOption !== null) {\r\n            setError(false);\r\n            if (url.length > 0) {\r\n                setError(false);\r\n                if (/[a-z0-9-]+(\\.\\w+)+/g.test(url)) {\r\n                    setError(false);\r\n                    \r\n                    if (!url.includes('http://') || !url.includes('https://')) {\r\n\r\n                        try {\r\n\r\n                            if (selectedOption.value === 'post') {\r\n\r\n                                fetch(url, {\r\n                                    method: selectedOption.value,\r\n                                    body: formData\r\n                                })\r\n                                .then(response => response.json())\r\n                                .then(data => {\r\n                                    \r\n                                    setResponse(true);\r\n                                    setData(data);\r\n                                    \r\n                                });\r\n\r\n                            } else if (selectedOption.value === 'get') {\r\n                                \r\n                                const newUrl = new URL(url);\r\n                                \r\n                                for (let key in formData) {\r\n                                    newUrl.searchParams.append(key, formData[key]);\r\n                                }\r\n\r\n                                fetch(newUrl, {\r\n                                    method: selectedOption.value\r\n                                })\r\n                                .then(response => response.json())\r\n                                .then(data => {\r\n                                    \r\n                                    setResponse(true);\r\n                                    setData(data);\r\n                                    \r\n                                });                     \r\n\r\n                            }\r\n\r\n                        } catch (err) {\r\n                            console.log(err);\r\n                        }\r\n                    \r\n                    }\r\n\r\n                } else {\r\n                    setErrorText('The URL isn\\'t compatible.');\r\n                    setError(true);\r\n                }\r\n            } else {\r\n                setErrorText('The URL must be filled.');\r\n                setError(true);            \r\n            }\r\n        } else {\r\n            setErrorText('Select the protocole.');\r\n            setError(true);\r\n        }\r\n\r\n    }\r\n\r\n    const closeError = () => {\r\n        setError(false);\r\n    }\r\n\r\n    const firstInputsMethod = (e) => {\r\n\t\tsetFirstInputs([...firstInputs, e.target.value]);\r\n\t}\r\n\r\n\tconst secondInputsMethod = (e) => {\r\n\t\tsetSecondInputs([...secondInputs, e.target.value]);\r\n\t}\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"requestSection\">\r\n\r\n                <h1>URL Status by Requestly!</h1>\r\n\r\n                <form onSubmit={submitForm}>\r\n                    <div>\r\n                        <Select\r\n                            defaultValue={selectedOption}\r\n                            onChange={setSelectedOption}\r\n                            options={options}\r\n                            className=\"selectComponent\"\r\n                        />\r\n                    </div>\r\n\r\n                    <input type=\"text\" placeholder=\"URL...\" onChange={(e) => setUrl(e.target.value)} />\r\n                    \r\n                    <button>\r\n                        Request\r\n                    </button>\r\n                </form>\r\n\r\n                {\r\n                    error ?\r\n                        <Error text={errorText} closeError={closeError} />\r\n                    :\r\n                        ''\r\n                }\r\n\r\n            </div>\r\n            <div className=\"optionsSection\">\r\n                <div>\r\n                    <h2>Response</h2>\r\n                    {\r\n                        response ?\r\n                            <Response>\r\n                                {\r\n                                    data ?\r\n                                        JSON.stringify(data, null, 2)\r\n                                    :\r\n                                        ''\r\n                                }\r\n                            </Response>\r\n                        :\r\n                            <p className=\"responseInfo\">No Data Yet...</p>\r\n                    }\r\n\r\n                </div>\r\n                <div>\r\n                    {\r\n                        selectedOption !== null ?\r\n                        (\r\n                            selectedOption.value === 'post' ?\r\n                                <h2>Data</h2>\r\n                            :\r\n                                <h2>Params</h2>\r\n                        ) \r\n                    :\r\n                        <h2>Data & Params</h2>\r\n                    }\r\n                    \r\n                    {\r\n                        selectedOption !== null ?\r\n                            (\r\n                                selectedOption.value === 'post' ?\r\n                                    <Protocole className=\"postData\" title=\"Post Data\" method={[firstInputsMethod, secondInputsMethod]} />\r\n                                :\r\n                                    <Protocole className=\"getParams\" title=\"Get Params\" method={[firstInputsMethod, secondInputsMethod]} />\r\n                            ) \r\n                        :\r\n                            <p className=\"protocoleInfo\">Choose the protocole to enable options...</p>\r\n                    }            \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import Dashboard from './components/Dashboard';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      \r\n      <Dashboard />\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}